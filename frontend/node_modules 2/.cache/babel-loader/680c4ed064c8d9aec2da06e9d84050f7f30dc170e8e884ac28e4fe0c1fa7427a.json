{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiasukhorukova/Desktop/mesto-react-auth/react-mesto-auth/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(props) {\n  _s();\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  // также устанавливаем дефолтное значение если данные еще не пришли\n\n  React.useEffect(() => {\n    var _currentUser$email, _currentUser$password;\n    setEmail((_currentUser$email = currentUser.email) !== null && _currentUser$email !== void 0 ? _currentUser$email : \"\");\n    setPassword((_currentUser$password = currentUser.password) !== null && _currentUser$password !== void 0 ? _currentUser$password : \"\");\n  }, [currentUser]);\n  function handleChangeName(e) {\n    setEmail(e.target.value);\n  }\n  function handleChangeDescription(e) {\n    setAbout(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"d2J70cwNxlV3m4bY3kbt04z06dA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","CurrentUserContext","PopupWithForm","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","useState","password","setPassword","currentUser","useContext","useEffect","_currentUser$email","_currentUser$password","handleChangeName","e","target","value","handleChangeDescription","setAbout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anastasiasukhorukova/Desktop/mesto-react-auth/react-mesto-auth/src/components/Login.js"],"sourcesContent":["import React from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction Login(props) {\n\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\n// также устанавливаем дефолтное значение если данные еще не пришли\n\n  React.useEffect(() => {\n      setEmail(currentUser.email ?? \"\");\n      setPassword(currentUser.password ?? \"\");\n}, [currentUser]); \n\nfunction handleChangeName(e) {\n  setEmail(e.target.value);\n}\n\nfunction handleChangeDescription(e) {\n  setAbout(e.target.value);\n}\n\n  return(\n    <PopupWithForm>\n\n    </PopupWithForm>\n  )\n}\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,kBAAkB,QAAO,gCAAgC;AACjE,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMG,WAAW,GAAGb,KAAK,CAACc,UAAU,CAACb,kBAAkB,CAAC;;EAE1D;EACA;EACA;;EAEED,KAAK,CAACe,SAAS,CAAC,MAAM;IAAA,IAAAC,kBAAA,EAAAC,qBAAA;IAClBR,QAAQ,EAAAO,kBAAA,GAACH,WAAW,CAACL,KAAK,cAAAQ,kBAAA,cAAAA,kBAAA,GAAI,EAAE,CAAC;IACjCJ,WAAW,EAAAK,qBAAA,GAACJ,WAAW,CAACF,QAAQ,cAAAM,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC;EAC7C,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,SAASK,gBAAgBA,CAACC,CAAC,EAAE;IAC3BV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B;EAEA,SAASC,uBAAuBA,CAACH,CAAC,EAAE;IAClCI,QAAQ,CAACJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B;EAEE,oBACEjB,OAAA,CAACF,aAAa;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEE;AAEpB;AAACpB,EAAA,CA7BQF,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AA+Bd,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}