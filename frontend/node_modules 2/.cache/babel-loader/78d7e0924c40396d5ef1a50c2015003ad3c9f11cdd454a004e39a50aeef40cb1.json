{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n\n  // _handleResponse(res) {\n  //   if(res.ok) {\n  //   return res.json();\n  // }\n  // return Promise.reject(`Ошибка: ${res.status}`)\n  // }\n\n  registerUser(email, password) {\n    return fetch(`${this._url}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => {\n      return res;\n    });\n    // .then(this._handleResponse);\n  }\n  //   .then((response) => {\n  //     try {\n  //       if (response.status === 200){\n  //         return response.json();\n  //       }\n  //     } catch(e){\n  //       return (e)\n  //     }\n  //   })\n  //   .then((res) => {\n  //     return res;\n  //   })\n  //   .catch((err) => console.log(err));\n  // }; \n\n  loginUser(email, password) {\n    return fetch(`${this._url}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        return data;\n      }\n    }).catch(err => console.log(err));\n  }\n  getToken(jwt) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: {\n        headers: this._headers,\n        Authorization: `Bearer ${jwt}`\n      }\n    }).then(response => {\n      try {\n        if (response.status === 200) {\n          return response.json();\n        }\n      } catch (e) {\n        return e;\n      }\n    }).then(res => {\n      return res;\n    }).catch(err => console.log(err));\n  }\n}\nconst useAuth = new Auth({\n  url: 'https://auth.nomoreparties.co',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': \"application/json\"\n  }\n});\nexport default useAuth;","map":{"version":3,"names":["Auth","constructor","options","_url","url","_headers","headers","registerUser","email","password","fetch","method","body","JSON","stringify","then","res","loginUser","response","json","data","token","localStorage","setItem","catch","err","console","log","getToken","jwt","Authorization","status","e","useAuth"],"sources":["/Users/anastasiasukhorukova/Desktop/mesto-react-auth/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["class Auth {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n\n  // _handleResponse(res) {\n  //   if(res.ok) {\n  //   return res.json();\n  // }\n  // return Promise.reject(`Ошибка: ${res.status}`)\n  // }\n\n  registerUser (email, password) {\n    return fetch(`${this._url}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    })\n    .then((res) => {\n      return res;\n    })\n    // .then(this._handleResponse);\n  }\n  //   .then((response) => {\n  //     try {\n  //       if (response.status === 200){\n  //         return response.json();\n  //       }\n  //     } catch(e){\n  //       return (e)\n  //     }\n  //   })\n  //   .then((res) => {\n  //     return res;\n  //   })\n  //   .catch((err) => console.log(err));\n  // }; \n\n  loginUser (email, password) {\n    return fetch(`${this._url}/signin`,{\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({email, password}),\n    })\n    .then((response => response.json()))\n  .then((data) => {\n    if (data.token){\n      localStorage.setItem('jwt', data.token);\n      return data;\n    }\n  })\n  .catch(err => console.log(err))\n}; \n\n  getToken (jwt) {\n    return fetch(`${this._url}/users/me`,{\n      method: 'GET',\n      headers: {\n        headers: this._headers,\n        Authorization: `Bearer ${jwt}`,\n      },\n    })\n    .then((response) => {\n      try {\n        if (response.status === 200){\n          return response.json();\n        }\n      } catch(e){\n        return (e)\n      }\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => console.log(err));\n  }\n}\n\nconst useAuth = new Auth({\n  url: 'https://auth.nomoreparties.co',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': \"application/json\"\n  }\n})\n\nexport default useAuth;"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACTC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,GAAG;IACvB,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACjC;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEAC,YAAYA,CAAEC,KAAK,EAAEC,QAAQ,EAAE;IAC7B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACP,IAAK,SAAQ,EAAE;MAClCQ,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBN,KAAK;QACLC;MACF,CAAC;IACH,CAAC,CAAC,CACDM,IAAI,CAAEC,GAAG,IAAK;MACb,OAAOA,GAAG;IACZ,CAAC,CAAC;IACF;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,SAASA,CAAET,KAAK,EAAEC,QAAQ,EAAE;IAC1B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACP,IAAK,SAAQ,EAAC;MACjCQ,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACN,KAAK;QAAEC;MAAQ,CAAC;IACxC,CAAC,CAAC,CACDM,IAAI,CAAEG,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAE,CACrCJ,IAAI,CAAEK,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,KAAK,EAAC;QACbC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,KAAK,CAAC;QACvC,OAAOD,IAAI;MACb;IACF,CAAC,CAAC,CACDI,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACjC;EAEEG,QAAQA,CAAEC,GAAG,EAAE;IACb,OAAOnB,KAAK,CAAE,GAAE,IAAI,CAACP,IAAK,WAAU,EAAC;MACnCQ,MAAM,EAAE,KAAK;MACbL,OAAO,EAAE;QACPA,OAAO,EAAE,IAAI,CAACD,QAAQ;QACtByB,aAAa,EAAG,UAASD,GAAI;MAC/B;IACF,CAAC,CAAC,CACDd,IAAI,CAAEG,QAAQ,IAAK;MAClB,IAAI;QACF,IAAIA,QAAQ,CAACa,MAAM,KAAK,GAAG,EAAC;UAC1B,OAAOb,QAAQ,CAACC,IAAI,EAAE;QACxB;MACF,CAAC,CAAC,OAAMa,CAAC,EAAC;QACR,OAAQA,CAAC;MACX;IACF,CAAC,CAAC,CACDjB,IAAI,CAAEC,GAAG,IAAK;MACb,OAAOA,GAAG;IACZ,CAAC,CAAC,CACDQ,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC;AACF;AAEA,MAAMQ,OAAO,GAAG,IAAIjC,IAAI,CAAC;EACvBI,GAAG,EAAE,+BAA+B;EACpCE,OAAO,EAAE;IACP,QAAQ,EAAE,kBAAkB;IAC5B,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAe2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}