{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiasukhorukova/Desktop/mesto-react-auth/react-mesto-auth/src/components/InfoTooltip.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import usePopupClose from \"../hooks/usePopupClose\";\n\nfunction InfoTooltip(_ref) {\n  let {\n    isOpen,\n    image,\n    title,\n    onClose\n  } = _ref;\n  // usePopupClose(isOpen, onClose)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup ${isOpen ? \"popup_opened\" : \" \"}`,\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"popup__image\",\n        src: image,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__text\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close\",\n        type: \"button\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = InfoTooltip;\nexport default InfoTooltip;\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["InfoTooltip","_ref","isOpen","image","title","onClose","_jsxDEV","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/anastasiasukhorukova/Desktop/mesto-react-auth/react-mesto-auth/src/components/InfoTooltip.js"],"sourcesContent":["// import usePopupClose from \"../hooks/usePopupClose\";\n\nfunction InfoTooltip({ isOpen, image, title, onClose }) {\n  // usePopupClose(isOpen, onClose)\n\n  return (\n    <div className={`popup ${isOpen ? \"popup_opened\" : \" \"}`} onClick={onClose}>\n      <div className=\"popup__container\">\n        <img className=\"popup__image\" src={image} alt={title} />\n        <h2 className=\"popup__text\">{title}</h2>\n        <button className=\"popup__close\" type=\"button\" onClick={onClose} />\n      </div>\n    </div>\n  );\n}\n\nexport default InfoTooltip;\n"],"mappings":";;AAAA;;AAEA,SAASA,WAAWA,CAAAC,IAAA,EAAoC;EAAA,IAAnC;IAAEC,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EACpD;;EAEA,oBACEK,OAAA;IAAKC,SAAS,EAAG,SAAQL,MAAM,GAAG,cAAc,GAAG,GAAI,EAAE;IAACM,OAAO,EAAEH,OAAQ;IAAAI,QAAA,eACzEH,OAAA;MAAKC,SAAS,EAAC,kBAAkB;MAAAE,QAAA,gBAC/BH,OAAA;QAAKC,SAAS,EAAC,cAAc;QAACG,GAAG,EAAEP,KAAM;QAACQ,GAAG,EAAEP;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxDT,OAAA;QAAIC,SAAS,EAAC,aAAa;QAAAE,QAAA,EAAEL;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACxCT,OAAA;QAAQC,SAAS,EAAC,cAAc;QAACS,IAAI,EAAC,QAAQ;QAACR,OAAO,EAAEH;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC/D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACE,EAAA,GAZQjB,WAAW;AAcpB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}