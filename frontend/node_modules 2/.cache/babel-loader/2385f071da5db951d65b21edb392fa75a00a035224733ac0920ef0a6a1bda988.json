{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiasukhorukova/Desktop/mesto-react-auth/react-mesto-auth/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(props) {\n  _s();\n  const [name, setName] = React.useState(\"\");\n  const [about, setAbout] = React.useState(\"\");\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  // также устанавливаем дефолтное значение если данные еще не пришли\n\n  React.useEffect(() => {\n    var _currentUser$name, _currentUser$about;\n    setName((_currentUser$name = currentUser.name) !== null && _currentUser$name !== void 0 ? _currentUser$name : \"\");\n    setAbout((_currentUser$about = currentUser.about) !== null && _currentUser$about !== void 0 ? _currentUser$about : \"\");\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Q8s346VEA8uxUMkf/k1DzjZWeAg=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","CurrentUserContext","PopupWithForm","jsxDEV","_jsxDEV","Login","props","_s","name","setName","useState","about","setAbout","currentUser","useContext","useEffect","_currentUser$name","_currentUser$about","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anastasiasukhorukova/Desktop/mesto-react-auth/react-mesto-auth/src/components/Login.js"],"sourcesContent":["import React from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction Login(props) {\n\n  const [name, setName] = React.useState(\"\");\n  const [about, setAbout] = React.useState(\"\");\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\n// также устанавливаем дефолтное значение если данные еще не пришли\n\n  React.useEffect(() => {\n      setName(currentUser.name ?? \"\");\n      setAbout(currentUser.about ?? \"\");\n}, [currentUser]); \n\n  return(\n    <PopupWithForm>\n\n    </PopupWithForm>\n  )\n}\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,kBAAkB,QAAO,gCAAgC;AACjE,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMG,WAAW,GAAGb,KAAK,CAACc,UAAU,CAACb,kBAAkB,CAAC;;EAE1D;EACA;EACA;;EAEED,KAAK,CAACe,SAAS,CAAC,MAAM;IAAA,IAAAC,iBAAA,EAAAC,kBAAA;IAClBR,OAAO,EAAAO,iBAAA,GAACH,WAAW,CAACL,IAAI,cAAAQ,iBAAA,cAAAA,iBAAA,GAAI,EAAE,CAAC;IAC/BJ,QAAQ,EAAAK,kBAAA,GAACJ,WAAW,CAACF,KAAK,cAAAM,kBAAA,cAAAA,kBAAA,GAAI,EAAE,CAAC;EACvC,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEf,oBACET,OAAA,CAACF,aAAa;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEE;AAEpB;AAACd,EAAA,CArBQF,KAAK;AAAAiB,EAAA,GAALjB,KAAK;AAuBd,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}