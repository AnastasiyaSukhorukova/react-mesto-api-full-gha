{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  async registerUser(email, password) {\n    const res = await fetch(`${this._url}/signup`, {\n      method: 'POST',\n      body: JSON.stringify({\n        emaiдl,\n        password\n      }),\n      headers: this._headers\n    });\n    return this._handleResponse(res);\n  }\n  loginUser(email, password) {\n    return fetch(`${this._url}/signin`, {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: this._headers\n    });\n  }\n  getToken(jwt) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: {\n        headers: this._headers,\n        Authorization: `Bearer ${jwt}`\n      }\n    });\n  }\n}\nconst useAuth = new Auth({\n  url: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': \"application/json\"\n  }\n});\nexport default useAuth;","map":{"version":3,"names":["Auth","constructor","options","_url","url","_headers","headers","_handleResponse","res","ok","json","Promise","reject","status","registerUser","email","password","fetch","method","body","JSON","stringify","emaiдl","loginUser","getToken","jwt","Authorization","useAuth"],"sources":["/Users/anastasiasukhorukova/Desktop/mesto-react-auth/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["class Auth {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n\n  _handleResponse(res) {\n    if(res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  async registerUser (email, password) {\n    const res = await fetch(`${this._url}/signup`, {\n      method: 'POST',\n      body: JSON.stringify({\n        emaiдl,\n        password\n      }),\n      headers: this._headers\n    });\n    return this._handleResponse(res);\n  }\n\n  loginUser (email, password) {\n    return fetch(`${this._url}/signin`,{\n      method: 'POST',\n      body: JSON.stringify({ email, password }),\n      headers: this._headers\n    })\n  }\n\n  getToken (jwt) {\n    return fetch(`${this._url}/users/me`,{\n      method: 'GET',\n      headers: {\n        headers: this._headers,\n        Authorization: `Bearer ${jwt}`,\n      },\n    })\n  }\n}\n\nconst useAuth = new Auth({\n  url: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': \"application/json\"\n  }\n})\n\nexport default useAuth;"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACTC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,GAAG;IACvB,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACjC;EAEAC,eAAeA,CAACC,GAAG,EAAE;IACnB,IAAGA,GAAG,CAACC,EAAE,EAAE;MACX,OAAOD,GAAG,CAACE,IAAI,EAAE;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAC9C;EAEA,MAAMC,YAAYA,CAAEC,KAAK,EAAEC,QAAQ,EAAE;IACnC,MAAMR,GAAG,GAAG,MAAMS,KAAK,CAAE,GAAE,IAAI,CAACd,IAAK,SAAQ,EAAE;MAC7Ce,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM;QACNN;MACF,CAAC,CAAC;MACFV,OAAO,EAAE,IAAI,CAACD;IAChB,CAAC,CAAC;IACF,OAAO,IAAI,CAACE,eAAe,CAACC,GAAG,CAAC;EAClC;EAEAe,SAASA,CAAER,KAAK,EAAEC,QAAQ,EAAE;IAC1B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACd,IAAK,SAAQ,EAAC;MACjCe,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,KAAK;QAAEC;MAAS,CAAC,CAAC;MACzCV,OAAO,EAAE,IAAI,CAACD;IAChB,CAAC,CAAC;EACJ;EAEAmB,QAAQA,CAAEC,GAAG,EAAE;IACb,OAAOR,KAAK,CAAE,GAAE,IAAI,CAACd,IAAK,WAAU,EAAC;MACnCe,MAAM,EAAE,KAAK;MACbZ,OAAO,EAAE;QACPA,OAAO,EAAE,IAAI,CAACD,QAAQ;QACtBqB,aAAa,EAAG,UAASD,GAAI;MAC/B;IACF,CAAC,CAAC;EACJ;AACF;AAEA,MAAME,OAAO,GAAG,IAAI3B,IAAI,CAAC;EACvBI,GAAG,EAAE,+BAA+B;EACpCE,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAeqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}