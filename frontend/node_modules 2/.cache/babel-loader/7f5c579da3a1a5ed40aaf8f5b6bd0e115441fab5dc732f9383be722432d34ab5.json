{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n  registerUser(email, password) {\n    return fetch(`${this._url}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(response => {\n      try {\n        if (response.status === 200) {\n          return response.json();\n        }\n      } catch (e) {\n        return e;\n      }\n    }).then(res => {\n      return res;\n    }).catch(err => console.log(err));\n  }\n  loginUser(email, password) {\n    return fetch(`${this._url}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.jwt) {\n        localStorage.setItem('jwt', data.jwt);\n        return data;\n      }\n    }).catch(err => console.log(err));\n  }\n  getToken(jwt) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: {\n        headers: this._headers,\n        Authorization: `Bearer ${jwt}`\n      }\n    }).then(response => {\n      try {\n        if (response.status === 200) {\n          return response.json();\n        }\n      } catch (e) {\n        return e;\n      }\n    }).then(res => {\n      return res;\n    }).catch(err => console.log(err));\n  }\n}\nconst useAuth = new Auth({\n  url: 'https://auth.nomoreparties.co',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': \"application/json\"\n  }\n});\nexport default useAuth;","map":{"version":3,"names":["Auth","constructor","options","_url","url","_headers","headers","registerUser","email","password","fetch","method","body","JSON","stringify","then","response","status","json","e","res","catch","err","console","log","loginUser","data","jwt","localStorage","setItem","getToken","Authorization","useAuth"],"sources":["/Users/anastasiasukhorukova/Desktop/mesto-react-auth/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["class Auth {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n\n  registerUser (email, password) {\n    return fetch(`${this._url}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        email,\n        password\n      })\n    })\n    .then((response) => {\n      try {\n        if (response.status === 200){\n          return response.json();\n        }\n      } catch(e){\n        return (e)\n      }\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => console.log(err));\n  }; \n\n  loginUser (email, password) {\n    return fetch(`${this._url}/signin`,{\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({ \"email\": email, \"password\": password }),\n    })\n    .then((response => response.json()))\n  .then((data) => {\n    if (data.jwt){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  })\n  .catch(err => console.log(err))\n}; \n\n  getToken (jwt) {\n    return fetch(`${this._url}/users/me`,{\n      method: 'GET',\n      headers: {\n        headers: this._headers,\n        Authorization: `Bearer ${jwt}`,\n      },\n    })\n    .then((response) => {\n      try {\n        if (response.status === 200){\n          return response.json();\n        }\n      } catch(e){\n        return (e)\n      }\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => console.log(err));\n  }\n}\n\nconst useAuth = new Auth({\n  url: 'https://auth.nomoreparties.co',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': \"application/json\"\n  }\n})\n\nexport default useAuth;"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACTC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,GAAG;IACvB,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACjC;EAEAC,YAAYA,CAAEC,KAAK,EAAEC,QAAQ,EAAE;IAC7B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACP,IAAK,SAAQ,EAAE;MAClCQ,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBN,KAAK;QACLC;MACF,CAAC;IACH,CAAC,CAAC,CACDM,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI;QACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;UAC1B,OAAOD,QAAQ,CAACE,IAAI,EAAE;QACxB;MACF,CAAC,CAAC,OAAMC,CAAC,EAAC;QACR,OAAQA,CAAC;MACX;IACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,GAAG,IAAK;MACb,OAAOA,GAAG;IACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC;EAEAG,SAASA,CAAEjB,KAAK,EAAEC,QAAQ,EAAE;IAC1B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACP,IAAK,SAAQ,EAAC;MACjCQ,MAAM,EAAE,MAAM;MACdL,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,OAAO,EAAEN,KAAK;QAAE,UAAU,EAAEC;MAAS,CAAC;IAC/D,CAAC,CAAC,CACDM,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACE,IAAI,EAAE,CAAE,CACrCH,IAAI,CAAEW,IAAI,IAAK;MACd,IAAIA,IAAI,CAACC,GAAG,EAAC;QACXC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,GAAG,CAAC;QACrC,OAAOD,IAAI;MACb;IACF,CAAC,CAAC,CACDL,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACjC;EAEEQ,QAAQA,CAAEH,GAAG,EAAE;IACb,OAAOjB,KAAK,CAAE,GAAE,IAAI,CAACP,IAAK,WAAU,EAAC;MACnCQ,MAAM,EAAE,KAAK;MACbL,OAAO,EAAE;QACPA,OAAO,EAAE,IAAI,CAACD,QAAQ;QACtB0B,aAAa,EAAG,UAASJ,GAAI;MAC/B;IACF,CAAC,CAAC,CACDZ,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI;QACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;UAC1B,OAAOD,QAAQ,CAACE,IAAI,EAAE;QACxB;MACF,CAAC,CAAC,OAAMC,CAAC,EAAC;QACR,OAAQA,CAAC;MACX;IACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,GAAG,IAAK;MACb,OAAOA,GAAG;IACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC;AACF;AAEA,MAAMU,OAAO,GAAG,IAAIhC,IAAI,CAAC;EACvBI,GAAG,EAAE,+BAA+B;EACpCE,OAAO,EAAE;IACP,QAAQ,EAAE,kBAAkB;IAC5B,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAe0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}