{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiasukhorukova/Desktop/mesto-react-auth/react-mesto-auth/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { CurrentCard } from \"../contexts/CurrentCard\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n// import ProtectedRoute from \"./ProtectedRoute\";\n// import InfoTooltip from \"./InfoTooltip\";\nimport success from \"../images/success.svg\";\nimport noSuccess from \"../images/noSuccess.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditAvatarClick, setEditAvatarClick] = React.useState(false);\n  const [isEditProfileClick, setEditProfileClick] = React.useState(false);\n  const [isAddPlaceClick, setAddPlaceClick] = React.useState(false);\n  const [selectedCard, setselectedCard] = React.useState(null);\n\n  //const [isInfoTooltipOpen, setInfoTooltip] = React.useState(false)\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [currentCards, setCurrentCards] = React.useState([]);\n\n  // const [infoToolTipData, setInfoToolTipData] = React.useState({\n  //   title: '',\n  //   image: '',\n  // })\n\n  //const navigate = useNavigate()\n  //const { loginUser, registerUser, getToken, error } = React.useAuth()\n\n  // const [isloggedIn, setloggedIn] = React.useState(false); // статус пользователя(вошел в систему или нет)\n  // const [isEmailUser, setEmailUser] = React.useState(null);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    (isLiked ? api.deleteLikeCard(card._id) : api.addLikeCard(card._id)).then(newCard => {\n      setCurrentCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(res => {\n      setCurrentCards(state => state.filter(c => c._id !== card._id));\n      // с - объект карточки\n      // state - массив карточек до удаления \n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleUpdateUser(data) {\n    api.editInfoUser(data.name, data.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleUpdateAvatar(data) {\n    api.editAvatarUser(data.avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  function handleAddPlaceSubmit(data) {\n    api.createInitialCards(data.name, data.link).then(newCard => {\n      setCurrentCards([newCard, ...currentCards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // function onRegister(email, password) {\n  //   registerUser(email, password)\n  //     .then(() => {\n  //       setInfoToolTipData({\n  //         image: success, //переменная к картинке\n  //         title: 'Вы успешно зарегистрировались!',\n  //       })\n  //       navigate('/sign-in')\n  //     })\n  //     .catch(() => {\n  //       setInfoToolTipData({\n  //         image: noSuccess, //переменная к картинке\n  //         title: 'Что-то пошло не так! Попробуйте ещё раз.',\n  //       })\n  //       console.error('Error: ' + error)\n  //     })\n  //     .finally(handleInfoTooltip)\n  // }\n\n  // function onLogin(email, password) {\n  //   loginUser(email, password)\n  //     .then((res) => {\n  //       localStorage.setItem('jwt', res.token)\n  //       setloggedIn(true)\n  //       setEmailUser(email)\n  //       navigate('/')\n  //     })\n  //     .catch(() => {\n  //       setInfoToolTipData({\n  //         image: success, //переменная к картинке\n  //         title: 'Что-то пошло не так! Попробуйте ещё раз.',\n  //       })\n  //       console.error('Error: ' + error)\n  //       handleInfoTooltip()\n  //     })\n  // }\n\n  // React.useEffect(() => {\n  //   if (isLoggedIn === true) {\n  //     navigate('/')\n  //   }\n  // }, [isLoggedIn, navigate])\n\n  React.useEffect(() => {\n    if (isLoggedIn) Promise.all([api.getInfoUser(), api.getInitialCards()]).then(res => {\n      setCurrentUser(res[0]);\n      setCurrentCards([...res[1]]);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [isLoggedIn]);\n  const closeAllPopups = () => {\n    setEditAvatarClick(false);\n    setEditProfileClick(false);\n    setAddPlaceClick(false);\n    setselectedCard(null);\n    // isInfoTooltipOpen && setInfoTooltip(false);\n  };\n\n  const handleEditAvatarClick = () => {\n    return setEditAvatarClick(!isEditAvatarClick);\n  };\n  const handleEditProfileClick = () => {\n    return setEditProfileClick(!isEditProfileClick);\n  };\n  const handleAddPlaceClick = () => {\n    return setAddPlaceClick(!isAddPlaceClick);\n  };\n  const handleCardClick = card => {\n    setselectedCard(card);\n  };\n\n  // const handleInfoTooltip = () => {\n  //   setInfoTooltip(true)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(CurrentCard.Provider, {\n      value: currentCards,\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Main, {\n                onEditProfile: handleEditProfileClick,\n                onAddPlace: handleAddPlaceClick,\n                onEditAvatar: handleEditAvatarClick,\n                onCardClick: handleCardClick,\n                onCardLike: handleCardLike,\n                onCardDelete: handleCardDelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/sign-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfileClick,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: isAddPlaceClick,\n            onClose: closeAllPopups,\n            onUpdatePlace: handleAddPlaceSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarClick,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: selectedCard,\n            onCardClick: handleCardClick,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HBHJHFuvHvn8PTEm/Si/3DO7RxE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Route","Routes","useNavigate","Header","Main","Footer","ImagePopup","api","CurrentUserContext","CurrentCard","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","success","noSuccess","jsxDEV","_jsxDEV","App","_s","isEditAvatarClick","setEditAvatarClick","useState","isEditProfileClick","setEditProfileClick","isAddPlaceClick","setAddPlaceClick","selectedCard","setselectedCard","currentUser","setCurrentUser","currentCards","setCurrentCards","handleCardLike","card","isLiked","likes","some","i","_id","deleteLikeCard","addLikeCard","then","newCard","state","map","c","catch","err","console","log","handleCardDelete","deleteCard","res","filter","handleUpdateUser","data","editInfoUser","name","about","closeAllPopups","handleUpdateAvatar","editAvatarUser","avatar","handleAddPlaceSubmit","createInitialCards","link","useEffect","isLoggedIn","Promise","all","getInfoUser","getInitialCards","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardLike","onCardDelete","isOpen","onClose","onUpdateUser","onUpdatePlace","onUpdateAvatar","_c","$RefreshReg$"],"sources":["/Users/anastasiasukhorukova/Desktop/mesto-react-auth/react-mesto-auth/src/components/App.js"],"sourcesContent":["import React from \"react\";\nimport {BrowserRouter, Route, Routes, useNavigate} from \"react-router-dom\"; \nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/Api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport {CurrentCard} from \"../contexts/CurrentCard\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n// import ProtectedRoute from \"./ProtectedRoute\";\n// import InfoTooltip from \"./InfoTooltip\";\nimport success from \"../images/success.svg\";\nimport noSuccess from \"../images/noSuccess.svg\"\n\n\nfunction App() {\n  const [isEditAvatarClick, setEditAvatarClick] = React.useState(false);\n  const [isEditProfileClick, setEditProfileClick] = React.useState(false);\n\n  const [isAddPlaceClick, setAddPlaceClick] = React.useState(false);\n  const [selectedCard, setselectedCard] = React.useState(null);\n\n  //const [isInfoTooltipOpen, setInfoTooltip] = React.useState(false)\n\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  const [currentCards, setCurrentCards] = React.useState([]);\n\n  // const [infoToolTipData, setInfoToolTipData] = React.useState({\n  //   title: '',\n  //   image: '',\n  // })\n\n  //const navigate = useNavigate()\n  //const { loginUser, registerUser, getToken, error } = React.useAuth()\n\n  // const [isloggedIn, setloggedIn] = React.useState(false); // статус пользователя(вошел в систему или нет)\n  // const [isEmailUser, setEmailUser] = React.useState(null);\n\n  function handleCardLike(card) {\n    \n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    \n    (isLiked\n    ? api.deleteLikeCard(card._id)\n    : api.addLikeCard(card._id))\n\n    .then((newCard) => {\n      setCurrentCards((state) => state.map((c) => (c._id === card._id ? newCard : c))\n      );\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n}\nfunction handleCardDelete(card) {\n\n  api.deleteCard(card._id)\n  .then((res) => {\n    setCurrentCards((state) => state.filter((c) => c._id !== card._id));\n    // с - объект карточки\n    // state - массив карточек до удаления \n})\n  .catch((err) => {\n    console.log(err);\n})\n}\n\nfunction handleUpdateUser(data) {\n  api.editInfoUser(data.name, data.about)\n  .then((res) => {\n    setCurrentUser(res)\n    closeAllPopups()\n  })\n  .catch((err) => {\n    console.log(err);\n  })\n}\n\nfunction handleUpdateAvatar(data) {\n  api.editAvatarUser(data.avatar)\n  .then((res) => {\n    setCurrentUser(res)\n    closeAllPopups()\n  })\n  .catch((err) => {\n    console.log(err);\n  })\n}\n\nfunction handleAddPlaceSubmit(data) {\n  api.createInitialCards(data.name, data.link)\n  .then((newCard) => {\n    setCurrentCards([newCard, ...currentCards])\n    closeAllPopups()\n  })\n  .catch((err) => {\n    console.log(err);\n  })\n}\n\n// function onRegister(email, password) {\n//   registerUser(email, password)\n//     .then(() => {\n//       setInfoToolTipData({\n//         image: success, //переменная к картинке\n//         title: 'Вы успешно зарегистрировались!',\n//       })\n//       navigate('/sign-in')\n//     })\n//     .catch(() => {\n//       setInfoToolTipData({\n//         image: noSuccess, //переменная к картинке\n//         title: 'Что-то пошло не так! Попробуйте ещё раз.',\n//       })\n//       console.error('Error: ' + error)\n//     })\n//     .finally(handleInfoTooltip)\n// }\n\n// function onLogin(email, password) {\n//   loginUser(email, password)\n//     .then((res) => {\n//       localStorage.setItem('jwt', res.token)\n//       setloggedIn(true)\n//       setEmailUser(email)\n//       navigate('/')\n//     })\n//     .catch(() => {\n//       setInfoToolTipData({\n//         image: success, //переменная к картинке\n//         title: 'Что-то пошло не так! Попробуйте ещё раз.',\n//       })\n//       console.error('Error: ' + error)\n//       handleInfoTooltip()\n//     })\n// }\n\n// React.useEffect(() => {\n//   if (isLoggedIn === true) {\n//     navigate('/')\n//   }\n// }, [isLoggedIn, navigate])\n\n  React.useEffect(() => {\n    if (isLoggedIn) \n    Promise.all([api.getInfoUser(), api.getInitialCards()])\n      .then((res) => {\n        setCurrentUser(res[0]);\n        setCurrentCards([...res[1]]);\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [isLoggedIn]);\n\n  const closeAllPopups = () => {\n    setEditAvatarClick(false);\n    setEditProfileClick(false);\n    setAddPlaceClick(false);\n    setselectedCard(null);\n    // isInfoTooltipOpen && setInfoTooltip(false);\n  };\n\n  const handleEditAvatarClick = () => {\n    return setEditAvatarClick(!isEditAvatarClick);\n  };\n\n  const handleEditProfileClick = () => {\n    return setEditProfileClick(!isEditProfileClick);\n  };\n\n  const handleAddPlaceClick = () => {\n    return setAddPlaceClick(!isAddPlaceClick);\n  };\n\n  const handleCardClick = (card) => {\n    setselectedCard(card);\n  };\n\n  // const handleInfoTooltip = () => {\n  //   setInfoTooltip(true)\n  // }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <CurrentCard.Provider value={currentCards}>\n      <BrowserRouter>\n        \n      <div className=\"page\">\n      <Header /> \n\n      {/* <ProtectedRoute\n                  component={Main}\n                  isLogged={isLoggedIn}\n                  onEditAvatar={handleEditAvatarClick}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onCardClick={handleCardClick}\n                  cards={currentCards}\n                  onCardLike={handleCardLike}\n                 // onCardDelete={handleDeleteClick}\n      /> */}\n\n      <Login />\n      <Register />\n\n      {/* <InfoTooltip\n      image={infoToolTipData.image}\n      title={infoToolTipData.title} \n      isOpen={isInfoTooltipOpen}\n      onClose={closeAllPopups} \n      /> */}\n\n      <Routes>\n\n        <Route path=\"/\" element={\n          <Main \n          onEditProfile={handleEditProfileClick} \n          onAddPlace={handleAddPlaceClick} \n          onEditAvatar={handleEditAvatarClick} \n          onCardClick={handleCardClick} \n          onCardLike={handleCardLike} \n          onCardDelete={handleCardDelete}/>\n          }/>\n\n      <Route path=\"/sign-up\" />\n      <Route path=\"/sign-in\" />\n       </Routes>\n\n      <Footer />\n\n      <EditProfilePopup \n      isOpen={isEditProfileClick} \n      onClose={closeAllPopups} \n      onUpdateUser={handleUpdateUser}/>\n\n      <AddPlacePopup \n      isOpen={isAddPlaceClick} \n      onClose={closeAllPopups} \n      onUpdatePlace={handleAddPlaceSubmit}/>\n\n      <EditAvatarPopup \n      isOpen={isEditAvatarClick} \n      onClose={closeAllPopups} \n      onUpdateAvatar={handleUpdateAvatar}/>\n\n      <ImagePopup \n      card={selectedCard} \n      onCardClick={handleCardClick} \n      onClose={closeAllPopups}/>\n\n    </div>\n    </BrowserRouter>\n    </CurrentCard.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}